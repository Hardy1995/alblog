{"version":3,"sources":["jquery.flot.errorbars.js"],"names":[],"mappings":"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","file":"jquery.flot.errorbars-compiled.js","sourcesContent":["/* Flot plugin for plotting error bars.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nError bars are used to show standard deviation and other statistical\nproperties in a plot.\n\n* Created by Rui Pereira  -  rui (dot) pereira (at) gmail (dot) com\n\nThis plugin allows you to plot error-bars over points. Set \"errorbars\" inside\nthe points series to the axis name over which there will be error values in\nyour data array (*even* if you do not intend to plot them later, by setting\n\"show: null\" on xerr/yerr).\n\nThe plugin supports these options:\n\n\tseries: {\n\t\tpoints: {\n\t\t\terrorbars: \"x\" or \"y\" or \"xy\",\n\t\t\txerr: {\n\t\t\t\tshow: null/false or true,\n\t\t\t\tasymmetric: null/false or true,\n\t\t\t\tupperCap: null or \"-\" or function,\n\t\t\t\tlowerCap: null or \"-\" or function,\n\t\t\t\tcolor: null or color,\n\t\t\t\tradius: null or number\n\t\t\t},\n\t\t\tyerr: { same options as xerr }\n\t\t}\n\t}\n\nEach data point array is expected to be of the type:\n\n\t\"x\"  [ x, y, xerr ]\n\t\"y\"  [ x, y, yerr ]\n\t\"xy\" [ x, y, xerr, yerr ]\n\nWhere xerr becomes xerr_lower,xerr_upper for the asymmetric error case, and\nequivalently for yerr. Eg., a datapoint for the \"xy\" case with symmetric\nerror-bars on X and asymmetric on Y would be:\n\n\t[ x, y, xerr, yerr_lower, yerr_upper ]\n\nBy default no end caps are drawn. Setting upperCap and/or lowerCap to \"-\" will\ndraw a small cap perpendicular to the error bar. They can also be set to a\nuser-defined drawing function, with (ctx, x, y, radius) as parameters, as eg.\n\n\tfunction drawSemiCircle( ctx, x, y, radius ) {\n\t\tctx.beginPath();\n\t\tctx.arc( x, y, radius, 0, Math.PI, false );\n\t\tctx.moveTo( x - radius, y );\n\t\tctx.lineTo( x + radius, y );\n\t\tctx.stroke();\n\t}\n\nColor and radius both default to the same ones of the points series if not\nset. The independent radius parameter on xerr/yerr is useful for the case when\nwe may want to add error-bars to a line, without showing the interconnecting\npoints (with radius: 0), and still showing end caps on the error-bars.\nshadowSize and lineWidth are derived as well from the points series.\n\n*/\n\n(function ($) {\n    var options = {\n        series: {\n            points: {\n                errorbars: null, //should be 'x', 'y' or 'xy'\n                xerr: { err: 'x', show: null, asymmetric: null, upperCap: null, lowerCap: null, color: null, radius: null},\n                yerr: { err: 'y', show: null, asymmetric: null, upperCap: null, lowerCap: null, color: null, radius: null}\n            }\n        }\n    };\n\n    function processRawData(plot, series, data, datapoints){\n        if (!series.points.errorbars)\n            return;\n\n        // x,y values\n        var format = [\n            { x: true, number: true, required: true },\n            { y: true, number: true, required: true }\n        ];\n\n        var errors = series.points.errorbars;\n        // error bars - first X then Y\n        if (errors == 'x' || errors == 'xy') {\n            // lower / upper error\n            if (series.points.xerr.asymmetric) {\n                format.push({ x: true, number: true, required: true });\n                format.push({ x: true, number: true, required: true });\n            } else\n                format.push({ x: true, number: true, required: true });\n        }\n        if (errors == 'y' || errors == 'xy') {\n            // lower / upper error\n            if (series.points.yerr.asymmetric) {\n                format.push({ y: true, number: true, required: true });\n                format.push({ y: true, number: true, required: true });\n            } else\n                format.push({ y: true, number: true, required: true });\n        }\n        datapoints.format = format;\n    }\n\n    function parseErrors(series, i){\n\n        var points = series.datapoints.points;\n\n        // read errors from points array\n        var exl = null,\n                exu = null,\n                eyl = null,\n                eyu = null;\n        var xerr = series.points.xerr,\n                yerr = series.points.yerr;\n\n        var eb = series.points.errorbars;\n        // error bars - first X\n        if (eb == 'x' || eb == 'xy') {\n            if (xerr.asymmetric) {\n                exl = points[i + 2];\n                exu = points[i + 3];\n                if (eb == 'xy')\n                    if (yerr.asymmetric){\n                        eyl = points[i + 4];\n                        eyu = points[i + 5];\n                    } else eyl = points[i + 4];\n            } else {\n                exl = points[i + 2];\n                if (eb == 'xy')\n                    if (yerr.asymmetric) {\n                        eyl = points[i + 3];\n                        eyu = points[i + 4];\n                    } else eyl = points[i + 3];\n            }\n        // only Y\n        } else if (eb == 'y')\n            if (yerr.asymmetric) {\n                eyl = points[i + 2];\n                eyu = points[i + 3];\n            } else eyl = points[i + 2];\n\n        // symmetric errors?\n        if (exu == null) exu = exl;\n        if (eyu == null) eyu = eyl;\n\n        var errRanges = [exl, exu, eyl, eyu];\n        // nullify if not showing\n        if (!xerr.show){\n            errRanges[0] = null;\n            errRanges[1] = null;\n        }\n        if (!yerr.show){\n            errRanges[2] = null;\n            errRanges[3] = null;\n        }\n        return errRanges;\n    }\n\n    function drawSeriesErrors(plot, ctx, s){\n\n        var points = s.datapoints.points,\n                ps = s.datapoints.pointsize,\n                ax = [s.xaxis, s.yaxis],\n                radius = s.points.radius,\n                err = [s.points.xerr, s.points.yerr];\n\n        //sanity check, in case some inverted axis hack is applied to flot\n        var invertX = false;\n        if (ax[0].p2c(ax[0].max) < ax[0].p2c(ax[0].min)) {\n            invertX = true;\n            var tmp = err[0].lowerCap;\n            err[0].lowerCap = err[0].upperCap;\n            err[0].upperCap = tmp;\n        }\n\n        var invertY = false;\n        if (ax[1].p2c(ax[1].min) < ax[1].p2c(ax[1].max)) {\n            invertY = true;\n            var tmp = err[1].lowerCap;\n            err[1].lowerCap = err[1].upperCap;\n            err[1].upperCap = tmp;\n        }\n\n        for (var i = 0; i < s.datapoints.points.length; i += ps) {\n\n            //parse\n            var errRanges = parseErrors(s, i);\n\n            //cycle xerr & yerr\n            for (var e = 0; e < err.length; e++){\n\n                var minmax = [ax[e].min, ax[e].max];\n\n                //draw this error?\n                if (errRanges[e * err.length]){\n\n                    //data coordinates\n                    var x = points[i],\n                        y = points[i + 1];\n\n                    //errorbar ranges\n                    var upper = [x, y][e] + errRanges[e * err.length + 1],\n                        lower = [x, y][e] - errRanges[e * err.length];\n\n                    //points outside of the canvas\n                    if (err[e].err == 'x')\n                        if (y > ax[1].max || y < ax[1].min || upper < ax[0].min || lower > ax[0].max)\n                            continue;\n                    if (err[e].err == 'y')\n                        if (x > ax[0].max || x < ax[0].min || upper < ax[1].min || lower > ax[1].max)\n                            continue;\n\n                    // prevent errorbars getting out of the canvas\n                    var drawUpper = true,\n                        drawLower = true;\n\n                    if (upper > minmax[1]) {\n                        drawUpper = false;\n                        upper = minmax[1];\n                    }\n                    if (lower < minmax[0]) {\n                        drawLower = false;\n                        lower = minmax[0];\n                    }\n\n                    //sanity check, in case some inverted axis hack is applied to flot\n                    if ((err[e].err == 'x' && invertX) || (err[e].err == 'y' && invertY)) {\n                        //swap coordinates\n                        var tmp = lower;\n                        lower = upper;\n                        upper = tmp;\n                        tmp = drawLower;\n                        drawLower = drawUpper;\n                        drawUpper = tmp;\n                        tmp = minmax[0];\n                        minmax[0] = minmax[1];\n                        minmax[1] = tmp;\n                    }\n\n                    // convert to pixels\n                    x = ax[0].p2c(x),\n                        y = ax[1].p2c(y),\n                        upper = ax[e].p2c(upper);\n                    lower = ax[e].p2c(lower);\n                    minmax[0] = ax[e].p2c(minmax[0]);\n                    minmax[1] = ax[e].p2c(minmax[1]);\n\n                    //same style as points by default\n                    var lw = err[e].lineWidth ? err[e].lineWidth : s.points.lineWidth,\n                        sw = s.points.shadowSize != null ? s.points.shadowSize : s.shadowSize;\n\n                    //shadow as for points\n                    if (lw > 0 && sw > 0) {\n                        var w = sw / 2;\n                        ctx.lineWidth = w;\n                        ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                        drawError(ctx, err[e], x, y, upper, lower, drawUpper, drawLower, radius, w + w/2, minmax);\n\n                        ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                        drawError(ctx, err[e], x, y, upper, lower, drawUpper, drawLower, radius, w/2, minmax);\n                    }\n\n                    ctx.strokeStyle = err[e].color? err[e].color: s.color;\n                    ctx.lineWidth = lw;\n                    //draw it\n                    drawError(ctx, err[e], x, y, upper, lower, drawUpper, drawLower, radius, 0, minmax);\n                }\n            }\n        }\n    }\n\n    function drawError(ctx,err,x,y,upper,lower,drawUpper,drawLower,radius,offset,minmax){\n\n        //shadow offset\n        y += offset;\n        upper += offset;\n        lower += offset;\n\n        // error bar - avoid plotting over circles\n        if (err.err == 'x'){\n            if (upper > x + radius) drawPath(ctx, [[upper,y],[Math.max(x + radius,minmax[0]),y]]);\n            else drawUpper = false;\n            if (lower < x - radius) drawPath(ctx, [[Math.min(x - radius,minmax[1]),y],[lower,y]] );\n            else drawLower = false;\n        }\n        else {\n            if (upper < y - radius) drawPath(ctx, [[x,upper],[x,Math.min(y - radius,minmax[0])]] );\n            else drawUpper = false;\n            if (lower > y + radius) drawPath(ctx, [[x,Math.max(y + radius,minmax[1])],[x,lower]] );\n            else drawLower = false;\n        }\n\n        //internal radius value in errorbar, allows to plot radius 0 points and still keep proper sized caps\n        //this is a way to get errorbars on lines without visible connecting dots\n        radius = err.radius != null? err.radius: radius;\n\n        // upper cap\n        if (drawUpper) {\n            if (err.upperCap == '-'){\n                if (err.err=='x') drawPath(ctx, [[upper,y - radius],[upper,y + radius]] );\n                else drawPath(ctx, [[x - radius,upper],[x + radius,upper]] );\n            } else if ($.isFunction(err.upperCap)){\n                if (err.err=='x') err.upperCap(ctx, upper, y, radius);\n                else err.upperCap(ctx, x, upper, radius);\n            }\n        }\n        // lower cap\n        if (drawLower) {\n            if (err.lowerCap == '-'){\n                if (err.err=='x') drawPath(ctx, [[lower,y - radius],[lower,y + radius]] );\n                else drawPath(ctx, [[x - radius,lower],[x + radius,lower]] );\n            } else if ($.isFunction(err.lowerCap)){\n                if (err.err=='x') err.lowerCap(ctx, lower, y, radius);\n                else err.lowerCap(ctx, x, lower, radius);\n            }\n        }\n    }\n\n    function drawPath(ctx, pts){\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (var p=1; p < pts.length; p++)\n            ctx.lineTo(pts[p][0], pts[p][1]);\n        ctx.stroke();\n    }\n\n    function draw(plot, ctx){\n        var plotOffset = plot.getPlotOffset();\n\n        ctx.save();\n        ctx.translate(plotOffset.left, plotOffset.top);\n        $.each(plot.getData(), function (i, s) {\n            if (s.points.errorbars && (s.points.xerr.show || s.points.yerr.show))\n                drawSeriesErrors(plot, ctx, s);\n        });\n        ctx.restore();\n    }\n\n    function init(plot) {\n        plot.hooks.processRawData.push(processRawData);\n        plot.hooks.draw.push(draw);\n    }\n\n    $.plot.plugins.push({\n                init: init,\n                options: options,\n                name: 'errorbars',\n                version: '1.0'\n            });\n})(jQuery);\n"]}